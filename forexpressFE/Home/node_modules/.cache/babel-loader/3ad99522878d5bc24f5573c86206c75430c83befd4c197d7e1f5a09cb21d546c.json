{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rayaa\\\\ReactProjects\\\\forexpress\\\\forexpressFE\\\\src\\\\App.js\";\nimport './App.css';\nimport { useState } from 'react';\nimport chartMaker from './chartMaker.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [balance, setBalance] = useState(100, newBalance => {\n  balance = newBalance;\n  console.log({\n    balance\n  });\n});\nconst handleBalanceClick = e => {\n  e.preventDefault();\n  setBalance(balance + 100);\n};\nasync function getStock(url) {\n  const newData = await fetchData(url);\n  return newData;\n}\nconst handleStockClick = e => {\n  e.preventDefault();\n  const newData = getStock('http://localhost:3002/api/getData/Top/tes/ter');\n  console.log(newData);\n};\nasync function sendData(url, user, pass) {\n  console.log(\"sending data...\");\n  try {\n    // Send the GET request using fetch\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: user,\n        password: pass\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    console.log('Data received:', data);\n\n    // Display the received data on the page (for demonstration purposes)\n    document.getElementById('result').textContent = JSON.stringify(data, null, 2);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n}\nconst handleSignup = e => {\n  console.log(\"inside sign up\");\n  e.preventDefault();\n  var username = document.getElementById('newuname').value;\n  var password = document.getElementById('newpword').value;\n  const url = \"http://localhost:3001/api/signUser\";\n  sendData(url, username, password);\n};\nasync function fetchData(url) {\n  try {\n    // Send the GET request using fetch\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    console.log('Data received:', data);\n\n    // Display the received data on the page (for demonstration purposes)\n    document.getElementById('result').textContent = JSON.stringify(data, null, 2);\n    return data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n}\nconst handleLogin = e => {\n  console.log(\"inside log in\");\n  e.preventDefault();\n  var username = document.getElementById('uname').value;\n  var password = document.getElementById('pword').value;\n  console.log(username);\n  console.log(password);\n  const url = 'http://localhost:3001/api/getUser/' + username + '/' + password;\n  console.log(url);\n  fetchData(url);\n};\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSignup(e),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newuname\",\n        children: \"Uname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"works1\",\n        id: \"newuname\",\n        name: \"newUsername\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newpword\",\n        children: \"pword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"works1\",\n        id: \"newpword\",\n        name: \"newPassword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleLogin(e),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"uname\",\n        children: \"Uname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"works1\",\n        id: \"uname\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 85\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pword\",\n        children: \"pword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"works1\",\n        id: \"pword\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 85\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleBalanceClick(e),\n      children: \"increase balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleStockClick(e),\n      children: \"get last stock tester\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"balance \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"chartMaker\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","chartMaker","jsxDEV","_jsxDEV","balance","setBalance","newBalance","console","log","handleBalanceClick","e","preventDefault","getStock","url","newData","fetchData","handleStockClick","sendData","user","pass","response","fetch","method","headers","body","JSON","stringify","username","password","ok","Error","data","json","document","getElementById","textContent","error","handleSignup","value","handleLogin","App","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","id","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rayaa/ReactProjects/forexpress/forexpressFE/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport chartMaker from './chartMaker.js';\n\n\n  const [balance, setBalance] = useState(100, (newBalance) => {\n    balance = newBalance;\n    console.log({balance});\n  });\n  const handleBalanceClick = e => {\n    e.preventDefault();\n    setBalance(balance + 100);\n  }\n  async function getStock(url){\n    const newData = await fetchData(url);\n    return newData;\n  }\n  const handleStockClick = e => {\n    e.preventDefault();\n    const newData = getStock('http://localhost:3002/api/getData/Top/tes/ter');\n    console.log(newData);\n  }\n\n  async function sendData(url, user, pass){\n\n    console.log(\"sending data...\");\n\n    try {\n      // Send the GET request using fetch\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username : user,\n          password : pass\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Data received:', data);\n\n      // Display the received data on the page (for demonstration purposes)\n      document.getElementById('result').textContent = JSON.stringify(data, null, 2);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n\n  const handleSignup = (e) => {\n    console.log(\"inside sign up\");\n\n    e.preventDefault();\n    var username = document.getElementById('newuname').value;\n    var password = document.getElementById('newpword').value;\n\n    const url = \"http://localhost:3001/api/signUser\";\n\n    sendData(url, username, password);\n  }\n\n  async function fetchData(url) {\n    try {\n      // Send the GET request using fetch\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Data received:', data);\n\n      // Display the received data on the page (for demonstration purposes)\n      document.getElementById('result').textContent = JSON.stringify(data, null, 2);\n      return data;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  } \n\n  const handleLogin = (e) => {\n    console.log(\"inside log in\");\n\n    e.preventDefault();\n    var username = document.getElementById('uname').value;\n    var password = document.getElementById('pword').value;\n\n    console.log(username);\n    console.log(password);\n    const url = 'http://localhost:3001/api/getUser/' + username + '/' + password;\n\n    console.log(url);\n    \n    fetchData(url);\n  }\nfunction App(){\n  return (\n    <div className=\"App\">\n      <form onSubmit={((e) => handleSignup(e))}>\n        <p>sign up</p> <br />\n        <label htmlFor=\"newuname\">Uname</label>\n        <input type=\"text\" placeholder=\"works1\" id=\"newuname\" name=\"newUsername\"></input> <br />\n        <label htmlFor=\"newpword\">pword</label>\n        <input type=\"text\" placeholder=\"works1\" id=\"newpword\" name=\"newPassword\"></input> <br />\n        <button type=\"submit\">sign up</button>\n      </form>\n      <form onSubmit={(e) => handleLogin(e)}>\n        <p>log in</p> <br />\n        <label htmlFor=\"uname\">Uname</label>\n        <input type=\"text\" placeholder=\"works1\" id=\"uname\" name=\"username\"></input> <br />\n        <label htmlFor=\"pword\">pword</label>\n        <input type=\"text\" placeholder=\"works1\" id=\"pword\" name=\"password\"></input> <br />\n        <button type=\"submit\">log in</button>\n      </form>\n      <button onClick={(e) => handleBalanceClick(e)}>increase balance</button>\n      <button onClick={(e) => handleStockClick(e)}>get last stock tester</button>\n      <p>balance {balance}</p>\n      <chartMaker />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}